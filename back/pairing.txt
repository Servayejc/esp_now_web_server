Automatic pairing for ESP NOW

Create a second structure like this one in server and sender:


In the OnDataRecv callback add a condition 

 if (len == sizeof(myData)){
    // your code here
 }
 if (len == sizeof(pairingData)){
	memcpy(&pairingData, incomingData, sizeof(pairingData));
    Serial.print("Pairing ");
    if (pairingData.id == 0) { 
      printMAC(mac_addr);

      Serial.print(" on channel " );
      Serial.println(pairingData.channel);
      addPeer(mac_addr, pairingData.channel);
      paired = true;
    }
  }  


void addPeer(const uint8_t * mac_addr, int chan){
  esp_now_peer_info_t peer;
  Serial.println(chan);
  ESP_ERROR_CHECK(esp_wifi_set_channel(chan ,  WIFI_SECOND_CHAN_NONE));
  esp_now_del_peer(serverAddress);
  memset(&peer, 0, sizeof(esp_now_peer_info_t));
  peer.channel = chan;
  peer.encrypt = false;
  memcpy(peer.peer_addr, mac_addr, sizeof(uint8_t[6]));
  if (esp_now_add_peer(&peer) != ESP_OK){
    Serial.println("Failed to add peer");
    return;
  }
  memcpy(serverAddress, mac_addr, sizeof(uint8_t[6]));
} 

typedef struct struct_pairing {
    int id;
    int channel;
} struct_pairing;
struct_pairing pairingData;

Start the server and init espnow with the wifi channel
The sender init espnow whith any channel number and add brodacast address (ff:ff:ff:ff:ff:ff) the his peer list 
The sender send a message in broadcast mode 
The server add the sender MAC to his peer list
The server reply to the message with his channel number
The sender receive the message and add the server MAC to his peer list with the receivec channel number
The sender remove the broadcast address fron his peer list








Client Board MAC Address:  78:E3:6D:09:FC:88
Mode: STA
Channel: 11
SSID (12): COGECO-BE360
Passphrase (11): 3FEADCOGECO
BSSID set: 0
Pairing request

Last Packet Send Status:        Delivery Success
Packet received from: 78:e3:6d:09:ee:84
data size = 4
Pairing 78:e3:6d:09:ee:84 on channel 11
11
1.00
10.00
78:e3:6d:09:ee:84
2.00
20.00
78:e3:6d:09:ee:84