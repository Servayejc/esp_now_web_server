--------------------------------------------------------------

                        PAIRING

--------------------------------------------------------------
Peer side: setup
    Pairing Status is set to PAIR_REQUEST 
    channel is set to 1

Peer side:
    esp_now_pairing autoPairing()

Peer side: 
    fill pairingData structure whith channel, BoardID, SERVER_ID
    send broadcast message and mac_addr with esp_now 

Server side
    if server receive the message, we are on the right channel
    server respond to the peer mac_addr with his own mac_addr
    server add the peer mac_addr to his peers list 

Peer side
    if Peer do not received a response, it increase the channel number and retry    
    if Peer receive the message from server and save the server mac_addr
    Peer save it's dataTypes in an array
    Peer set the status to PAIR_PAIRED 


--------------------------------------------------------------

                        SET POINTS

--------------------------------------------------------------


Server side: SETPOINTS
    SetPoints
    User    change a setpoint HTML event - el, value
    Script  sendAsJson {PeerID, DeviceID, DeviceType and Value} 
    Svr     handleWebSocketMessage 
            fill setPoint structure with received data
            send setPoint to PeerID (esp_now)

Peer side:
    Main    on_esp_now_data_recv 
            if messageType == SETPOINTS
                save data received to the DeviceID - DeviceType
                modify the setPoint
                apply the setpoint, recalculate 
                save the new status to myData
                send myData to the server (esp_now)

Server side: DATA
    Main    on_esp_now_data_recv 
            if messageType == DATA
                processDataReceived
                copy data received to incomingReadings structure
                create a JSON string with PeerID, DeviceID and Data received
                send the string via event to connected clients
    Script  source.addEventListener('new_readings'...) receive the message
                compute element id for each data received
                update HTML 


--------------------------------------------------------------

                        SEND DATA TO SERVER

--------------------------------------------------------------

Peer side:
    Main    loop
    for each DeviceID
        getReadings : fill myData structure for diviceType 
        send myData structure to server via esp_now








